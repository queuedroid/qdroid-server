definitions:
  echo.HTTPError:
    properties:
      message: {}
    type: object
  handlers.CreateExchangeRequest:
    properties:
      description:
        description: Description of the exchange
        example: This exchange handles OTP messages.
        type: string
      label:
        description: Label for the exchange
        example: OTP Messages
        type: string
    type: object
  handlers.CreateExchangeResponse:
    properties:
      created_at:
        description: Timestamp of when the exchange was created
        example: "2023-10-01T12:00:00Z"
        type: string
      description:
        description: Description of the created exchange
        example: This exchange handles OTP messages.
        type: string
      exchange_id:
        description: ID of the created exchange
        example: ex_jkdfkjdfkdfjkd
        type: string
      label:
        description: Label of the created exchange
        example: OTP Messages
        type: string
      message:
        description: Message indicating successful creation
        example: Exchange created successfully
        type: string
      updated_at:
        description: Timestamp of when the exchange was last updated
        example: "2023-10-01T12:00:00Z"
        type: string
    type: object
  handlers.GetUserResponse:
    properties:
      account_id:
        description: Unique identifier for the user
        example: acc_1234567890
        type: string
      account_token:
        description: Authentication token for the user's account
        example: sample_account_token
        type: string
      email:
        description: Email address associated with the user's account
        example: user@example.com
        type: string
      message:
        description: Message indicating successful retrieval
        example: User retrieved successfully
        type: string
      phone_number:
        description: Phone number associated with the user's account
        example: "+2371234567890"
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      email:
        description: User's email address
        example: user@example.com
        type: string
      password:
        description: User's password
        example: MySecretPassword@123
        type: string
    type: object
  handlers.LoginResponse:
    properties:
      message:
        description: Message indicating successful login
        example: Login successful
        type: string
      session_token:
        description: |-
          Authentication session token
          This token is used for subsequent authenticated requests.
          It should be stored securely by the client.
          Should be used in the Authorization header as a Bearer token.
        example: sample_session_token
        type: string
    type: object
  handlers.SignupRequest:
    properties:
      email:
        description: |-
          User's email address
          required: true
        example: user@example.com
        type: string
      password:
        description: |-
          User's password
          required: true
        example: MySecretPassword@123
        type: string
      phone_number:
        description: Optional phone number
        example: "+2371234567890"
        type: string
    type: object
  handlers.SignupResponse:
    properties:
      message:
        description: Message indicating successful signup
        example: Signup successful
        type: string
    type: object
  handlers.UpdateExchangeRequest:
    properties:
      description:
        description: New description for the exchange
        example: This exchange handles new OTP messages.
        type: string
      label:
        description: New label for the exchange
        example: New OTP Messages
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a token.
      parameters:
      - description: Login request payload
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/handlers.LoginResponse'
        "400":
          description: Bad request, missing required fields
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Login a user
      tags:
      - auth
  /v1/auth/signup:
    post:
      consumes:
      - application/json
      description: Creates a new user account.
      parameters:
      - description: Signup request payload
        in: body
        name: signupRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.SignupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Signup successful
          schema:
            $ref: '#/definitions/handlers.SignupResponse'
        "400":
          description: Bad request, missing required fields
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "409":
          description: Duplicate user
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Register a new user
      tags:
      - auth
  /v1/exchanges/:
    post:
      consumes:
      - application/json
      description: Creates a new exchange for the user.
      parameters:
      - default: Bearer <your_token_here>
        description: Bearer token for authentication. Replace <your_token_here> with
          a valid token.
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create exchange request payload
        in: body
        name: createExchangeRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateExchangeRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Exchange created successfully
          schema:
            $ref: '#/definitions/handlers.CreateExchangeResponse'
        "400":
          description: Bad request, missing required fields
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: Unauthorized, invalid or expired session token
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "409":
          description: Duplicate exchange label
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - BearerAuth: []
      summary: Create a new exchange
      tags:
      - exchanges
  /v1/exchanges/{exchange_id}:
    delete:
      description: Deletes an existing exchange.
      parameters:
      - description: Bearer token for authentication.
        in: header
        name: Authorization
        required: true
        type: string
      - description: Exchange ID
        in: path
        name: exchange_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Exchange deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized, invalid or expired session token
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Exchange not found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - BearerAuth: []
      summary: Delete an exchange
      tags:
      - exchanges
    put:
      consumes:
      - application/json
      description: Update an existing exchange..
      parameters:
      - default: Bearer <your_token_here>
        description: Bearer token for authentication. Replace <your_token_here> with
          a valid token.
        in: header
        name: Authorization
        required: true
        type: string
      - description: Exchange ID
        in: path
        name: exchange_id
        required: true
        type: string
      - description: Update exchange request payload
        in: body
        name: updateExchangeRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateExchangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Exchange updated successfully
          schema:
            $ref: '#/definitions/handlers.CreateExchangeResponse'
        "400":
          description: Bad request, missing required fields
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: Unauthorized, invalid or expired session token
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Exchange not found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "409":
          description: Duplicate exchange label detected
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - BearerAuth: []
      summary: Update an exchange
      tags:
      - exchanges
  /v1/users/:
    get:
      consumes:
      - application/json
      description: Retrieves the details of the authenticated user.
      parameters:
      - default: Bearer <your_token_here>
        description: Bearer token for authentication. Replace <your_token_here> with
          a valid token.
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User retrieved successfully
          schema:
            $ref: '#/definitions/handlers.GetUserResponse'
        "401":
          description: Unauthorized, invalid or expired session token
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      security:
      - BearerAuth: []
      summary: Get user details
      tags:
      - users
swagger: "2.0"
