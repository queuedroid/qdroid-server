definitions:
  echo.HTTPError:
    properties:
      message: {}
    type: object
  handlers.GetOneAPIKeyResponse:
    properties:
      created_at:
        type: string
      label:
        example: My API Key
        type: string
      last_used_at:
        type: string
      seen:
        example: false
        type: boolean
      token:
        example: sample_api_key_token
        type: string
      updated_at:
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      email:
        description: User's email address
        example: user@example.com
        type: string
      password:
        description: User's password
        example: MySecretPassword@123
        type: string
    type: object
  handlers.LoginResponse:
    properties:
      message:
        description: Message indicating successful login
        example: Login successful
        type: string
      session_token:
        description: |-
          Authentication session token
          This token is used for subsequent authenticated requests.
          It should be stored securely by the client.
          Should be used in the Authorization header as a Bearer token.
        example: sample_session_token
        type: string
    type: object
  handlers.SignupRequest:
    properties:
      email:
        description: |-
          User's email address
          required: true
        example: user@example.com
        type: string
      password:
        description: |-
          User's password
          required: true
        example: MySecretPassword@123
        type: string
      phone_number:
        description: Optional phone number
        example: "+2371234567890"
        type: string
    type: object
  handlers.SignupResponse:
    properties:
      message:
        description: Message indicating successful signup
        example: Signup successful
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/auth/apikey:
    get:
      consumes:
      - application/json
      description: |-
        Retrieves the API key for the authenticated user.
        Note: The Authorization header must contain the session_token obtained from the login endpoint, in the format "Bearer {token}".
      parameters:
      - description: Bearer {token} (session_token from login)
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: API key retrieved successfully
          schema:
            $ref: '#/definitions/handlers.GetOneAPIKeyResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get a user's API key
      tags:
      - auth
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a token.
      parameters:
      - description: Login request payload
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/handlers.LoginResponse'
        "400":
          description: Bad request, missing required fields
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Login a user
      tags:
      - auth
  /v1/auth/signup:
    post:
      consumes:
      - application/json
      description: Creates a new user account.
      parameters:
      - description: Signup request payload
        in: body
        name: signupRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.SignupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Signup successful
          schema:
            $ref: '#/definitions/handlers.SignupResponse'
        "400":
          description: Bad request, missing required fields
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "409":
          description: Duplicate user
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Register a new user
      tags:
      - auth
swagger: "2.0"
